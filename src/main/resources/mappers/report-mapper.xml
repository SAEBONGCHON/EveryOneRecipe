<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="reportMapper">
	<insert id="insertPostReport" parameterType="revo">
		insert into report values(SEQ_REPORTID.nextval, #{userId}, #{postId}, null, #{reportContent}, 'p', default)
	</insert>
	<insert id="insertCommentReport" parameterType="revo">
		insert into report values(SEQ_REPORTID.nextval, #{userId}, null, #{cmtId}, #{reportContent}, 'c', default)
	</insert>
	
	<!-- 관리자 회원별 작성 글 관리 -->
	<select id="postingCount" resultType="_int">
		
	</select>
	
	<insert id="reportPost" parameterType="com.kh.everyrecipe.report.vo.ReportVo"  statementType="CALLABLE" >
    { call PROC_REPORT_POST (
        #{userId, mode=IN, jdbcType=VARCHAR},
        #{postId, mode=IN, jdbcType=INTEGER},
        #{reportContent, mode=IN, jdbcType=VARCHAR},
        #{cmtId, mode=OUT, jdbcType=INTEGER}
    )}
	</insert>
	<insert id="reportComment" parameterType="com.kh.everyrecipe.report.vo.ReportVo" statementType="CALLABLE" >
    { call PROC_REPORT_COMMENT (
        #{userId, mode=IN, jdbcType=VARCHAR},
        #{cmtId, mode=IN, jdbcType=INTEGER},
        #{reportContent, mode=IN, jdbcType=VARCHAR},
        #{postId, mode=OUT, jdbcType=INTEGER}
    )}
	</insert>

	<select id="getReportedPosts" resultType="com.kh.everyrecipe.report.vo.ReportedPostVo">
		SELECT p.postid, p.foodname, p.userid,p.nickname, COUNT(*) as reportCnt , p.ISBLINDED as status
		FROM post p
		LEFT JOIN report r ON p.postid = r.postid
		WHERE r.postid IS NOT NULL
		GROUP BY p.postid, p.foodname, p.nickname,p.ISBLINDED, p.userid
	</select>
	
	<select id="getReportInfoP" resultType="com.kh.everyrecipe.report.vo.ReportVo">
		SELECT REPORTID,USERID,POSTID,REPORTCONTENT,REPORTTIME FROM REPORT WHERE POSTID =#{postId}
	
	</select>
	<select id="getAllReportedP" resultType="com.kh.everyrecipe.report.vo.ReportedPostVoAll">
		SELECT r.reportid, p.postid, p.foodname, p.userid as pUserId, p.nickname, r.userid as rUserId, r.reportContent, r.reportTime, p.ISBLINDED as status
		FROM post p
		LEFT JOIN report r ON p.postid = r.postid
		WHERE r.userid IS NOT NULL AND r.POSTID IS NOT NULL
        order by reportid
	</select>
	
	
	
	
	<select id="getReportedComments" resultType="com.kh.everyrecipe.report.vo.ReportedCommentVo">
		SELECT c.postid, c.cmtid ,r.userid, m.nickname, COUNT(*) as reportCnt , c.ISBLINDED as status
		  FROM TBCOMMENT c
     LEFT JOIN report r ON  c.cmtid = r.cmtid
     LEFT JOIN members m ON r.userid = m.userid
	     WHERE r.userid IS NOT NULL
		 GROUP BY c.postid, c.cmtid, m.nickname, c.ISBLINDED, r.userid
	</select>
	
	<select id="getReportInfoC" resultType="com.kh.everyrecipe.report.vo.ReportVo">
		SELECT REPORTID,USERID,CMTID,REPORTCONTENT,REPORTTIME FROM REPORT WHERE CMTID =#{cmtId}
	</select>
	<select id="getAllReportedC" resultType="com.kh.everyrecipe.report.vo.ReportedCmtVoAll">
		SELECT r.reportid, c.cmtid, c.postid,c.userid as cuserid ,m.nickname, r.userid as rUserId, r.REPORTCONTENT, c.ISBLINDED as status, r.REPORTTIME
		  FROM TBCOMMENT c
     LEFT JOIN report r ON  c.cmtid = r.cmtid
     LEFT JOIN members m ON r.userid = m.userid
	     WHERE r.userid IS NOT NULL
	</select>
	
	
	<!--차단된 회원  -->
	<select id="getLastBlockInfo" resultType="com.kh.everyrecipe.report.vo.BlockedMemberVo">
		SELECT *
		  FROM (
		    SELECT BLOCKID,
		    	   USERID,
		           CASE WHEN STARTTIME <![CDATA[< SYSDATE AND SYSDATE  < ]]>ENDTIME THEN 'Y'
		                ELSE 'N'
		            END AS STATUS,
		           to_char(STARTTIME,'yyyy-mm-dd"T"hh24:mi') STARTTIME,
		           to_char(ENDTIME,'yyyy-mm-dd"T"hh24:mi') ENDTIME,
		           reason,
		           (select count(*) from memberblock where userid=#{userId}) AS BLOCKCNT
		      FROM MEMBERBLOCK
		     WHERE USERID =#{userId}
		     ORDER BY BLOCKID DESC
		  )
		WHERE ROWNUM = 1
	
	</select>
	<update id="changeBlockT">
		UPDATE MEMBERBLOCK SET ENDTIME= TO_TIMESTAMP(#{endTime}, 'YYYY-MM-DD"T"HH24:MI')  WHERE BLOCKID=#{blockId}	
	</update>
	<update id="unblock">
		UPDATE MEMBERBLOCK SET ENDTIME= SYSTIMESTAMP  WHERE BLOCKID=#{blockId}	
	</update>
	<insert id="block">
		INSERT INTO MEMBERBLOCK VALUES((SELECT NVL(MAX(BLOCKID), 0) + 1 FROM MEMBERBLOCK),#{userId},#{reason}, TO_TIMESTAMP(#{startTime}, 'YYYY-MM-DD"T"HH24:MI'),  TO_TIMESTAMP(#{endTime}, 'YYYY-MM-DD"T"HH24:MI'))
	</insert>

<!--블라인드 토글 -->	
	<update id="tgBlindPost">
		UPDATE POST 
		   SET ISBLINDED = CASE 
			  				WHEN ISBLINDED='N' THEN 'Y'
							WHEN ISBLINDED='Y' THEN 'N'
						  END
		 WHERE POSTID=#{postId}
		 	
	</update>
	<update id="tgBlindCmt">
		UPDATE TBCOMMENT 
		   SET ISBLINDED = CASE 
			  				WHEN ISBLINDED='N' THEN 'Y'
							WHEN ISBLINDED='Y' THEN 'N'
						  END
		 WHERE CMTID=#{cmtId}
	</update>
	
	<select id="getBlockInfo" resultType="com.kh.everyrecipe.report.vo.BlockedMemberVo">
		SELECT * FROM MEMBERBLOCK WHERE USERID= #{userId}
	
	</select>
</mapper>
