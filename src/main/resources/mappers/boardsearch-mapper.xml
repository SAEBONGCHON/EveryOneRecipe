<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardSearchMapper">
	<resultMap type="com.kh.everyrecipe.board.vo.PostVo" id="postResultMap">
		<id property="postId" column="POSTID"/>
		<result property="userId" column="USERID"/>
		<result property="nickname" column="NICKNAME"/>
		<result property="foodName" column="FOODNAME"/>
		<result property="content" column="CONTENT"/>
		<result property="createDate" column="CREATEAT"/>
		<result property="UpdateDate" column="UPDATEAT"/>
		<result property="isDeleted" column="ISDELETED"/>
		<result property="lookUp" column="LOOKUP"/>
		<result property="profileUrl" column="PROFILEURL"/>
		<result property="profile" column="PROFILE"/>
		<result property="likeCnt" column="LIKECNT"/>
		<result property="followCnt" column="FOLLOWCNT"/>
		<collection property="ingredients" ofType="ivo">
			<result property="ingredient" column="INGREDIENT"/>
			<result property="amount" column="AMOUNT"/>
		</collection>
	</resultMap>
	<resultMap type="com.kh.everyrecipe.board.vo.PostVo" id="postHashResultMap">
		<id property="postId" column="POSTID"/>
		<result property="userId" column="USERID"/>
		<result property="nickname" column="NICKNAME"/>
		<result property="foodName" column="FOODNAME"/>
		<result property="content" column="CONTENT"/>
		<result property="createDate" column="CREATEAT"/>
		<result property="UpdateDate" column="UPDATEAT"/>
		<result property="isDeleted" column="ISDELETED"/>
		<result property="lookUp" column="LOOKUP"/>
		<result property="profileUrl" column="PROFILEURL"/>
		<result property="profile" column="PROFILE"/>
		<result property="likeCnt" column="LIKECNT"/>
		<result property="followCnt" column="FOLLOWCNT"/>
		<result property="hashtag" column="HASHTAG"/>
		<collection property="ingredients" ofType="ivo">
			<result property="ingredient" column="INGREDIENT"/>
			<result property="amount" column="AMOUNT"/>
		</collection>
	</resultMap>
	<select id="pagingList" parameterType="map" resultMap="postResultMap">
		SELECT 
		  <if test="userId !=null">
		   (select count(*) from POSTLIKE where USERID=#{userId} AND POSTID=p2.POSTID  AND ISDELETED='N') as likecnt
		 , (select count(*) from FOLLOWMAPPING where FWID=#{userId} and USERID=p2.USERID and ISDELETED='N') as followcnt
		 ,
		   </if>
		   p2.POSTID , p2.USERID , p2.NICKNAME , p2.FOODNAME , p2.CONTENT , p2.CREATEAT , p2.UPDATEAT 
         , p2.ISDELETED , p2.LOOKUP, i.INGREDIENT , i.AMOUNT, m.PROFILEURL
	  FROM
			(SELECT * 
			   FROM (SELECT p.*
			              , ROWNUM AS RNUM
			           FROM (SELECT * FROM post WHERE
                       	<if test="myPage != null">
	                       	USERID=#{myPage} AND		
                       	</if>                  
                       ISDELETED = 'N' AND FOODNAME LIKE '%'||#{keyword}||'%' ORDER BY postid ) p) 
             ) p2
             JOIN ingredient i 
                   ON p2.POSTID = i.POSTID 
             JOIN members m 
                   ON p2.USERID = m.USERID
	</select>
	<select id="pagingHashList" parameterType="map" resultMap="postHashResultMap">
		SELECT 
		  <if test="userId !=null">
		   (select count(*) from POSTLIKE where USERID=#{userId} AND POSTID=p2.POSTID  AND ISDELETED='N') as likecnt
		 , (select count(*) from FOLLOWMAPPING where FWID=#{userId} and USERID=p2.USERID and ISDELETED='N') as followcnt
		 ,
		   </if>
		   p2.POSTID , p2.USERID , p2.NICKNAME , p2.FOODNAME , p2.CONTENT , p2.CREATEAT , p2.UPDATEAT 
         , p2.ISDELETED , p2.LOOKUP, i.INGREDIENT , i.AMOUNT, m.PROFILEURL, h.HASHTAG
         FROM
         	(SELECT * 
			   FROM (SELECT p.*
			              , ROWNUM AS RNUM
			           FROM (SELECT * FROM post WHERE
			           <if test="myPage != null">
	                       	USERID=#{myPage} AND		
                       </if>   
                       ISDELETED = 'N' ORDER BY postid ) p)
                       ) p2
             JOIN ingredient i 
                   ON p2.POSTID = i.POSTID 
             JOIN members m 
                   ON p2.USERID = m.USERID
             JOIN hashtag h
                   ON p2.POSTID = h.POSTID
             WHERE h.HASHTAG LIKE '%'||#{keyword}||'%'
	</select>
	<select id="selectSearchData" parameterType="String" resultType="_int">
		select count(*) from search where KEWORD=#{keyword}
	</select>
	<select id="searchRecommendKeyword" resultType="svo">
		select ROW_NUMBER() OVER (ORDER BY times DESC) as rown, s.* from search s <![CDATA[where rownum <= 5]]>
	</select>
	<select id="searchUserId" parameterType="map" resultType="mvo">
		select USERID, NICKNAME, PROFILE, PROFILEURL from members where USERID LIKE '%'||#{keyword}||'%'
	</select>
	<select id="searchUserNickname" parameterType="map" resultType="mvo">
		select USERID, NICKNAME, PROFILE, PROFILEURL from members where NICKNAME LIKE '%'||#{keyword}||'%'
	</select>
	<select id="rankSearchList" resultType="svo">
		select ROW_NUMBER() OVER (ORDER BY times DESC) as rown, s.* from search s where <![CDATA[rownum <= 100]]> order by times desc
	</select>
	<insert id="insertSearchData" parameterType="String">
		insert into search values(#{keyword}, (select NVL(MAX(TIMES), 0)+1 from search where KEWORD=#{keyword}), default, default)
	</insert>
	<update id="updateSearchData" parameterType="String">
		update search 
		set TIMES=(
			select NVL(MAX(TIMES), 0)+1
			from search
			where KEWORD=#{keyword}
			),
			SEARCHDATE=default
		where KEWORD=#{keyword}
	</update>
</mapper>
