<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="boardMapper">
	<resultMap type="com.kh.everyrecipe.board.vo.PostVo" id="postResultMap">
		<id property="postId" column="POSTID"/>
		<result property="userId" column="USERID"/>
		<result property="nickname" column="NICKNAME"/>
		<result property="foodName" column="FOODNAME"/>
		<result property="content" column="CONTENT"/>
		<result property="createDate" column="CREATEAT"/>
		<result property="UpdateDate" column="UPDATEAT"/>
		<result property="isDeleted" column="ISDELETED"/>
		<result property="lookUp" column="LOOKUP"/>
		<collection property="ingredients" ofType="ivo">
			<result property="ingredient" column="INGREDIENT"/>
			<result property="amount" column="AMOUNT"/>
		</collection>
	</resultMap>

	<!--Post -->
	<select id="selectList" resultMap="postResultMap">
		SELECT p.POSTID
     , p.USERID
     , p.NICKNAME
     , p.FOODNAME
     , p.CONTENT
     , p.CREATEAT
     , p.UPDATEAT
     , p.ISDELETED
     , p.LOOKUP
     , i.INGREDIENT
     , i.AMOUNT
  FROM post p
 INNER JOIN ingredient i
    ON p.POSTID = i.POSTID
 WHERE p.ISDELETED = 'N'
	</select>
	
	<select id="pagingList" parameterType="map" resultMap="postResultMap">
	SELECT p2.POSTID , p2.USERID , p2.NICKNAME , p2.FOODNAME , p2.CONTENT , p2.CREATEAT , p2.UPDATEAT 
	 	 , p2.ISDELETED , p2.LOOKUP, i.INGREDIENT , i.AMOUNT 
	  FROM
			(SELECT * 
			   FROM (SELECT p.*
			              , ROWNUM AS RNUM
			           FROM (SELECT * FROM post <if test="userId != null">where USERID = #{userId} </if> ORDER BY postid ) p) 
		   <![CDATA[  WHERE RNUM> #{from} AND RNUM<=#{to})]]> p2 JOIN ingredient i 
		   														   ON p2.POSTID = i.POSTID  
	 WHERE p2.ISDELETED = 'N' 
		

	</select>
	
	<select id="selectOne" resultMap="postResultMap" parameterType="_int">
		SELECT p.POSTID
     , p.USERID
     , p.NICKNAME
     , p.FOODNAME
     , p.CONTENT
     , p.CREATEAT
     , p.UPDATEAT
     , p.ISDELETED
     , p.LOOKUP
     , i.INGREDIENT
     , i.AMOUNT
  FROM post p
 INNER JOIN ingredient i
    ON p.POSTID = i.POSTID
 WHERE p.POSTID = #{postId}
	</select>

	

	<select id="getLastPostId" resultType="_int">
		SELECT MAX(postId) FROM post
	</select>

	<insert id="insertPost" parameterType="bvo">
		INSERT INTO post values( (SELECT NVL(MAX(postid), 0) + 1 FROM post), #{userId}, #{nickname}, #{foodName}, #{content}, default, default, default,0) 
	</insert>
	<update id="insertBasicPost" parameterType="java.util.List">
  		<foreach collection="list" item="item" open="INSERT ALL" close="SELECT * FROM DUAL" >
   			INTO post VALUES(#{item.postId}, #{item.userId}, #{item.nickname},#{item.foodName},#{item.content},default,default,default,0 )
  		</foreach>
	</update>
	<update id="delete" parameterType="_int">
		UPDATE post SET isdeleted='Y' WHERE postid=#{postId}
	</update>
	<update id="updatePost" parameterType="bvo">
		UPDATE POST 
		   SET FOODNAME=#{foodName}
		     , CONTENT =#{content} 
		     , UPDATEAT = default
		 WHERE POSTID=#{postId}
	</update>
	
	<update id="upView">
		UPDATE POST 
		   SET LOOKUP =NVL(LOOKUP, 0) +1
		 WHERE POSTID=#{postId}
	</update>
	
	
	<!--Ingredients  -->
	<update id="insertIngList" parameterType="java.util.List">
  		<foreach collection="list" item="item" open="INSERT ALL" close="SELECT * FROM DUAL">
   			INTO ingredient VALUES(#{item.postId}, #{item.ingredient}, #{item.amount} )
  		</foreach>
	</update>
	<select id="allIngredients" resultType="ivo">
		SELECT * FROM ingredient
	</select>
	
	<select id="getIngredients" resultType="ivo">
		SELECT * FROM ingredient WHERE postid =#{postId}
	</select>
	<select id="searchIng" resultType="string">
		SELECT DISTINCT TRIM(ingredient) FROM ingredient WHERE ingredient LIKE '%'||#{ing}||'%'
	</select>
	
	<delete id="deleteIngList" parameterType="_int">
		DELETE FROM ingredient WHERE postid=#{postId}
	</delete>
	
	
	
	<!--Hashtag -->
	<update id="insertHashtagList" parameterType="java.util.List">
  		<foreach collection="list" item="item" open="INSERT ALL" close="SELECT * FROM DUAL">
   			INTO hashtag VALUES( #{item.hashtag},#{item.postId} )
  		</foreach>
	</update>
	<select id="getHashtags" resultType="hvo">
		SELECT * FROM hashtag WHERE postid =#{postId}
	</select>
	
	<delete id="deleteHashtagList" parameterType="_int">
		DELETE FROM hashtag WHERE postid=#{postId}
	</delete>
	
	
	
	
	
	


	
	
	

	
</mapper>
